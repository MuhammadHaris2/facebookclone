{"version":3,"sources":["Header.jsx","SidebarRow.jsx","Sidebar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","className","src","alt","type","placeholder","fontSize","Avatar","IconButton","SidebarRow","title","Icon","Sidebar","LocalHospitalIcon","EmojiFlagsIcon","PeopleIcon","ChatIcon","StorefrontIcon","VideoLibraryIcon","ExpandMoreIcon","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8ZAkFeA,EApEA,WACX,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YAAYC,IAAI,uEAAuEC,IAAI,OAE5G,yBAAKF,UAAU,WACf,kBAAC,IAAD,MACA,2BAAOG,KAAK,OAAOH,UAAU,WAAWI,YAAY,sBAIpD,yBAAKJ,UAAU,iBACf,yBAAKA,UAAU,6BACf,kBAAC,IAAD,CAAUK,SAAS,WAEnB,yBAAKL,UAAU,6BACf,kBAAC,IAAD,CAAUK,SAAS,WAGnB,yBAAKL,UAAU,6BACf,kBAAC,IAAD,CAAmBK,SAAS,WAG5B,yBAAKL,UAAU,6BACf,kBAAC,IAAD,CAAgBK,SAAS,WAGzB,yBAAKL,UAAU,6BACf,kBAAC,IAAD,CAA0BK,SAAS,YAMnC,yBAAKL,UAAU,gBACf,yBAAKA,UAAU,UACf,kBAACM,EAAA,EAAD,MACA,+CAIA,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,UCxDDC,EAVI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAMR,EAAY,EAAZA,IAAIS,EAAQ,EAARA,KAC3B,OACI,yBAAKV,UAAU,cACZC,GAAK,kBAACK,EAAA,EAAD,CAAQL,IAAKA,IAClBS,GAAQ,kBAACA,EAAD,MACP,wBAAIV,UAAU,SAASS,K,qFCkBpBE,EAhBD,WACV,OACI,yBAAKX,UAAU,WACX,kBAAC,EAAD,CAAYC,IAAI,wPAAwPQ,MAAM,mBAC9Q,kBAAC,EAAD,CAAYC,KAAME,IAAmBH,MAAM,gCAC3C,kBAAC,EAAD,CAAYC,KAAMG,IAAgBJ,MAAM,UACxC,kBAAC,EAAD,CAAYC,KAAMI,IAAYL,MAAM,YACpC,kBAAC,EAAD,CAAYC,KAAMK,IAAUN,MAAM,cAClC,kBAAC,EAAD,CAAYC,KAAMM,IAAgBP,MAAM,gBACxC,kBAAC,EAAD,CAAYC,KAAMO,IAAkBR,MAAM,WAC1C,kBAAC,EAAD,CAAYC,KAAMQ,IAAgBT,MAAM,eCJrCU,EAbH,WACR,OACI,yBAAKnB,UAAU,OACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,YACf,kBAAC,EAAD,SCIQoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dc45c541.chunk.js","sourcesContent":["import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FlagIcon from '@material-ui/icons/Flag';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"header_left\">\r\n              <img className=\"hl_images\" src=\"http://pngimg.com/uploads/facebook_logos/facebook_logos_PNG19754.png\" alt=\"fb\"/>\r\n            \r\n            <div className=\"h_input\">\r\n            <SearchIcon/>\r\n            <input type=\"text\" className=\"hi_imput\" placeholder=\"Search Facebook\"/>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"header_middle\">\r\n            <div className=\"hm_icons hm_icons--active\">\r\n            <HomeIcon fontSize=\"Large\"/>\r\n            </div> \r\n            <div className=\"hm_icons hm_icons--active\">\r\n            <FlagIcon fontSize=\"Large\"/>\r\n            </div>\r\n\r\n            <div className=\"hm_icons hm_icons--active\">\r\n            <SubscriptionsIcon fontSize=\"Large\"/>\r\n            </div>\r\n\r\n            <div className=\"hm_icons hm_icons--active\">\r\n            <StorefrontIcon fontSize=\"Large\"/>\r\n            </div>\r\n\r\n            <div className=\"hm_icons hm_icons--active\">\r\n            <SupervisedUserCircleIcon fontSize=\"Large\"/>\r\n            </div> \r\n\r\n                \r\n            </div>\r\n            \r\n            <div className=\"header_right\">\r\n            <div className=\"h_info\">\r\n            <Avatar />\r\n            <h4>Muhammad Haris</h4>\r\n            </div>\r\n          \r\n            \r\n            <IconButton>\r\n                <AddIcon/>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n                <ForumIcon/>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n                <NotificationsIcon/>\r\n            </IconButton>\r\n            \r\n            <IconButton>\r\n                <ExpandMoreIcon/>\r\n            </IconButton>\r\n            \r\n\r\n            \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst SidebarRow = ({title,src,Icon})=>{\r\n    return(\r\n        <div className=\"sidebarRow\">\r\n          {src&&<Avatar src={src}/>}\r\n          {Icon && <Icon/>}\r\n            <h4 className=\"sbr_h\">{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarRow;","import React from 'react';\r\nimport SidebarRow from './SidebarRow';\r\nimport EmojiFlagsIcon from '@material-ui/icons/EmojiFlags';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n \r\nconst Sidebar=()=>{\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <SidebarRow src=\"https://scontent.fkhi2-1.fna.fbcdn.net/v/t1.0-1/p240x240/102981840_3280599295498964_5955365528490904221_o.jpg?_nc_cat=101&_nc_sid=dbb9e7&_nc_ohc=aLkaq6IBpaYAX8elrcn&_nc_ht=scontent.fkhi2-1.fna&tp=6&oh=83edaa990c934e23784be6ffb0eef29e&oe=5F80F3A1\" title=\"Muhammad Haris\"/>\r\n            <SidebarRow Icon={LocalHospitalIcon} title=\"COVID-19 Information Center\"/>\r\n            <SidebarRow Icon={EmojiFlagsIcon} title=\"Pages\" />\r\n            <SidebarRow Icon={PeopleIcon} title=\"Friends\"/>\r\n            <SidebarRow Icon={ChatIcon} title=\"Messenger\"/>\r\n            <SidebarRow Icon={StorefrontIcon} title=\"Marketplace\"/>\r\n            <SidebarRow Icon={VideoLibraryIcon} title=\"Videos\"/>\r\n            <SidebarRow Icon={ExpandMoreIcon} title=\"See More\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nconst App = ()=>{\r\n    return(\r\n        <div className=\"app\">\r\n            <Header/>\r\n            <div className=\"app_body\">\r\n            <Sidebar/>\r\n            </div>\r\n            \r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}